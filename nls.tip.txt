UTF code 및 한글 사용과 같은 NLS 관련 기록.

* 한글 identifier를 사용할 수 있는가?


  https://golang.org/ref/spec#Identifiers

  language spec을 확인해 보면 identifier 는 letter로 시작해야하고, letter는 모든 category에 해당하는 unicode 글자를 허용하고 있다. 따라서 한글을 변수명이나 함수 이름으로 사용하는데 제한은 없다. 그렇지만 중요한 결격사유가 있다.

  한글 identifier sample.

  https://play.golang.org/p/XafNbJhsEe

  package main

import (
  "fmt"
  "strings"
)

type 한글이름 struct {
  성 string
  이름 string
}

type 호출 interface {
  부르기()
  내이름은()
}

func (이름 *한글이름) 부르기() {
  fmt.Printf("야! %v %v!\n", 이름.성, 이름.이름)
}

func main() {
  fmt.Printf("한글 비교 %v\n", strings.ToLower("한글") == strings.ToUpper("한글"))
  fmt.Printf("English compare %v\n", strings.ToLower("english") == strings.ToUpper("english"))

  대빵 := 한글이름{"홍", "길동"}
  대빵.부르기()
}


>> 실행 결과

한글 비교 true
English compare false
야! 홍 길동!


그렇지만 중요한 결격사유가 있다. 위 실행 결과에서 볼 수 있듯이 한글은 uppercase와 lowercase가 같은 글자로 인식된다. 이 문제는 identifier의 export 가능여부에 영향을 준다.

https://golang.org/ref/spec#Exported_identifiers

Export 가능 조건 중 첫번째가 대문자로 시작하는 글자여야하는데 한글은 대문자를 표기할 방법이 없어 한글명 type이나 field을 정의하면 다른 소스에서 호출할 방법이 없다.
Export 필요 없다면 한글을 사용하겠지만, 조금 사용해 보면 혼란스러워 사실상 한글 사용을 고집할 수 없게될 것 같다.


* Linux terminal 에서 unicode 환경 설정하기.

go는 unicode를 기반으로 동작하기에 source file의 encoding은 UTF8이다. 그렇지만, 눈으로 보고 있는 최종 단말의 환경은 Unicode가 아니다. 아래 설정은 제가 사용하는 환경 기준입니다.

> Shell 환경

  LANG=en_US.UTF8

> vim 의 encoding 환경

  set encoding=utf-8
  set fileencodings=utf-8   <--- 또는 필요한 코드 추가.

  만약 go file만 utf를 사용한다면 .vimrc 에 다음과 같이 *.go에만 utf-8 사용하도록 설정할 수 있다.

  au BufNewFile,BufRead *.go set filetype=go encoding=utf-8 fileencodings=utf-8,euckr

> teraterm 환경

  setup / General / Language : Korean
  setup / Terminal에서 'Coding(receive)' 와 'Coding(transmit)' 모두 'UTF-8'
  setup / Terminal에서 'local'에 'korean', 'CodePage'에 949
